import { Dispatch, SetStateAction } from "react"
import { Link, useLocation } from "react-router-dom"

import adminPicture from "../imgs/admin.png"
import useAuth from "../package/hooks/useAuth"

export default function SlideBar({
	hook,
	setHook
}: {
	hook: boolean
	setHook: Dispatch<SetStateAction<boolean>>
}) {
	// Auth
	const { auth, handlerLogOut } = useAuth()

	/* --------------------------------------------------------------------------------------------- */
	return (
		<div className={hook ? "sidebar open" : "sidebar"}>
			<div className='logo-details'>
				<div className='icon w-14 h-12'>
					<svg
						version='1.1'
						viewBox='0 0 700 700'
						xmlns='http://www.w3.org/2000/svg'
						fill='#ffff'
					>
						<g>
							<path
								stroke='#ffff'
								strokeWidth='5'
								d='m532.31 147.48c-0.26172-0.83984-0.64844-1.6406-1.3164-2.3086-0.50391-0.50391-1.0117-0.90234-1.5195-1.3945-0.25781-0.34766-0.62109-0.60547-0.96875-0.89063-0.10547-0.10156-0.21094-0.19531-0.32422-0.29687-0.27344-0.37109-0.57031-0.69531-0.91797-0.98438-0.28516-0.33984-0.59766-0.62109-0.96484-0.89062-0.089843-0.09375-0.17188-0.19141-0.26172-0.28516-0.29687-0.35938-0.57031-0.73828-0.92969-1.0078-0.48828-0.50391-0.88672-1.0117-1.3906-1.5117-0.65625-0.65625-1.4492-1.0547-2.2773-1.3086-18.555-15.141-37.594-20.965-56.684-17.148-48.719 9.7266-83.906 78.863-100.54 119.21-1.9492 4.7266-3.793 9.1172-5.5781 13.355l-75.254-75.266c-4.8281-4.793-11.25-7.4375-18.082-7.4375s-13.25 2.6445-18.082 7.4492l-0.042969 0.042969-26.582-26.582c-4.6719-4.6758-10.887-7.2539-17.5-7.2539-6.5977 0-12.789 2.5664-17.449 7.2227-9.4805 9.4805-9.7344 24.566-0.44141 34.473l27.055 27.059-0.054687 0.054688c-9.957 9.957-9.957 26.168 0 36.133l87.172 87.18c-17.168 15.562-82.867 76.91-85.793 79.645-0.62891 0.55859-15.484 13.805-15.98 29.383-0.22266 7.0664 2.4062 13.395 7.8164 18.801 0.10547 0.10547 0.24219 0.14063 0.34766 0.23438 0.09375 0.10547 0.125 0.23437 0.22266 0.33594 5.1953 5.1953 11.234 7.8242 17.961 7.8242 0.28125 0 0.55859-0.003906 0.83594-0.015625 15.578-0.5 28.816-15.344 29.266-15.855 2.832-3.0352 64.199-68.746 79.762-85.91l68.594 68.59c4.8008 4.8008 11.219 7.4492 18.066 7.4492 6.8555 0 13.266-2.6484 18.066-7.4492l0.054688-0.054688 26.59 26.59c4.6758 4.6758 10.887 7.2461 17.5 7.2461 6.5977 0 12.789-2.5664 17.449-7.2227 9.4766-9.4766 9.7266-24.562 0.44922-34.473l-27.066-27.059 0.054687-0.054687c9.918-9.9609 9.918-26.188-0.011718-36.16l-56.668-56.66c4.2383-1.793 8.625-3.6328 13.352-5.5898 40.344-16.637 109.47-51.816 119.21-100.54 3.8203-19.109-2.0039-38.125-17.137-56.668zm-116.48 134.57-4.1836 2.3125c-4.4258 2.4531-8.7969 4.9883-13.137 7.5273l-0.77344-0.77344c5.8125-4.5547 11.234-8.7461 15.719-12.102 1.0586-0.79687 86.207-66.477 110.26-110 3.8555 51.422-72.684 93.621-107.88 113.03zm-38.812-11.637c2.5312-4.3398 5.0625-8.7305 7.5273-13.16l2.3203-4.207c19.422-35.195 61.656-111.74 113.07-107.86-43.469 24.062-109.25 109.19-110.04 110.25-3.3672 4.4844-7.5586 9.918-12.113 15.73zm21.836-8.2539c31.02-41.383 97.004-111.7 119.18-112.18 0.19531 0.09375 0.39844 0.19531 0.59375 0.29297 0.078126 0.16406 0.16406 0.33594 0.24219 0.5-0.33203 6.3438-6.4336 22.309-43.086 58.789-26.941 26.812-58.152 52.336-69.043 60.496-4.8047 3.6133-10.684 8.1641-16.98 13.105l-4.0078-4.0039c4.9336-6.293 9.4844-12.18 13.098-16.996zm-24.277-19.223c12.707-30.812 47.141-103.46 92.379-112.49 9.4141-1.8828 18.91-0.80469 28.441 3.1406-55.574 0.26172-98.297 77.711-118.34 114.06l-2.3125 4.1758c-1.9375 3.4961-3.9375 6.9336-5.9375 10.383l-1.6367-1.6367c2.3438-5.4727 4.793-11.293 7.4062-17.629zm-181.34-66.055c-5.0078-5.3438-4.8672-13.586 0.32031-18.77 2.543-2.543 5.9297-3.9414 9.5312-3.9414 3.6172 0 7.0234 1.4102 9.582 3.9688l26.582 26.582-19.086 19.086zm52.527 271.03c-2.9297 3.3047-12.477 11.93-21.363 12.191-3.9023 0.13281-7.3203-1.3672-10.488-4.5352-0.10547-0.10547-0.24219-0.14062-0.34766-0.23438-0.09375-0.10547-0.125-0.23438-0.22266-0.33594-3.168-3.168-4.6523-6.6094-4.543-10.496 0.26953-8.8984 8.8945-18.441 12.309-21.477 0.75781-0.69922 69.91-65.277 86.195-80.008l18.586 18.582c-14.738 16.281-79.328 85.453-80.125 86.312zm246.76-9.918c5.0078 5.3438 4.8594 13.59-0.32031 18.77-5.0898 5.1016-14 5.0781-19.113-0.023437l-26.59-26.59 19.086-19.086zm-26.895-42.812-35.023 35.023c-5.3711 5.3711-14.906 5.3711-20.289 0l-190.21-190.21c-5.5938-5.5938-5.5938-14.699 0-20.293l3.9492-3.9492c0.023438-0.023438 0.0625-0.035156 0.085938-0.054688l26.996-27.004c0.023438-0.023438 0.023438-0.042969 0.042969-0.066406l3.9375-3.9375c2.7109-2.6953 6.3281-4.1758 10.176-4.1758 3.8516 0 7.4688 1.4844 10.168 4.168l81.117 81.117 31.293 31.32c0.72656 0.72266 1.3086 1.3047 1.6133 1.5859l4.0938 4.0977c2.5547 2.5977 5.9453 5.9961 9.457 9.457 0.92578 0.95312 1.8867 1.9023 2.8555 2.8633l59.719 59.711c5.5938 5.6172 5.5938 14.746 0.015624 20.348zm72.828-193.23c-9.0312 45.238-81.676 79.672-112.49 92.379-6.3516 2.6211-12.18 5.0664-17.625 7.3984-0.55469-0.54688-1.1133-1.1016-1.6445-1.6289 3.4492-1.9922 6.8867-4.0078 10.383-5.9453l4.1602-2.2969c36.348-20.043 113.81-62.766 114.09-118.33 3.9375 9.5273 5.0078 19.023 3.1289 28.426z'
							/>
						</g>
					</svg>
				</div>
				<div className='logo_name'>FrontEnd Manager</div>
				<i
					className={
						hook ? "bx bx-menu-alt-right" : "bx bx-menu"
					}
					id='btn'
					onClick={() => setHook(!hook)}
				/>
			</div>
			<ul className='nav-list'>
				<Button
					label='Operatori'
					to='/operatori'
					icon='bx-edit-alt'
				/>
				<Button
					label='Materie Prime'
					to='/materie-prime'
					icon='bx-data'
				/>
				<Button
					label='Ricette'
					to='/ricette'
					icon='bx-spreadsheet'
				/>
				<Button
					label='Ordini'
					to='/'
					icon='bx-cart-alt'
				/>

				<li className='profile'>
					<div className='profile-details'>
						<img
							src={adminPicture}
							alt='Admin'
						/>
						<div className='name_job'>
							<div className='name'>{auth.Username}</div>
							<div className='job'>Admin</div>
						</div>
					</div>
					<i
						className='bx bx-log-out'
						id='log_out'
						onClick={handlerLogOut}
					/>
				</li>
			</ul>
		</div>
	)
}

/* --------------------------------------------------------------------------------------------- */
// Button
/* --------------------------------------------------------------------------------------------- */
function Button({
	to,
	label,
	icon
}: {
	to: string
	label: string
	icon: string
}) {
	// Recupero il pathName cos√¨ da colorare il Btn in cui mi trovo
	const { pathname } = useLocation()

	return (
		<li>
			<Link
				to={to}
				className={pathname === to ? "a activated" : "a"}
			>
				<i className={"bx " + icon} />
				<span className='links_name'>{label}</span>
			</Link>
			<span className='tooltip'>{label}</span>
		</li>
	)
}
